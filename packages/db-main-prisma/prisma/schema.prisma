generator client {
  provider = "prisma-client-js"
  // output = "../src/generated"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

model Post {
  id            Int      @id @default(autoincrement())
  title         String
  content       String
  link          String?
  image         String?
  slug          String    @unique
  keywords      String[]
  author        User?     @relation(fields: [authorId], references: [id])
  authorId      Int?      @map(name: "author_id")
  publishedAt   DateTime? @map(name: "published_at")
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")

  @@index([slug], name: "slug")
  @@map(name: "post")
}

model User {
  id              Int       @id @default(autoincrement())
  firstName       String?   @map(name: "first_name")
  lastName        String?   @map(name: "last_name")
  username        String    @unique
  email           String    @unique
  image           String?
  emailVerifiedAt DateTime? @map(name: "email_verified_at")
  createdAt       DateTime  @default(now()) @map(name: "created_at")
  updatedAt       DateTime  @updatedAt @map(name: "updated_at")
  posts           Post[]

  @@index([username], name: "username")
  @@index([email], name: "email")
  @@map(name: "user")
}

model AuthAccount {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "auth_account")
}

model AuthSession {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "auth_session")
}

model AuthVerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "auth_verification_request")
}
